import json
import pandas as pd
import geopandas as gpd

# Downlaod data from osm-boundaries.com
# curl -X QUERY --remote-name --remote-header-name --location --max-redirs -1 --header 'X-OSMB-Api-Key: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX' 'https://osm-boundaries.com/api/v1/download?db=osm20241104&boundary=administrative&format=GeoJSON&srid=4326&includeAllTags=true' -d 'osmIds=1174746329,-303427,-3263728,-53292,-192756,-9407,-195267,-2177161,-536900,-286393,-364066,-80500,-16239,-364110,-547469,-378734,-184640,-547511,-59065,-52411,-287827,-192784,-1993208,-184629,-252645,-2528142,-1889339,-59470,-1993867,-285454,-2103120,-186382,-192783,-195269,-49898,-192830,-1428125,-535774,-2185366,-192790,-2361304,-167454,-270056,-120027,-535790,-192794,-2184233,-287667,-192779,-214885,-307833,-307787,-51684,-192795,-50046,-192801,-307823,-307828,-305142,-108089,-1473947,-1520612,-192791,-296961,-79510,-88210,-192800,-2185374,-52939,-571802,-571747,-54224,-2202162,-192793,-28699,-51477,-192781,-1278736,-192307,-2184073,-550727,-1521463,-270009,-192778,-192776,-287083,-307829,-287670,-21335,-299133,-304716,-304751,-304938,-304934,-62273,126470842,-17893358,-17893359,626244000,126470877,23623225,-17893357,-17894046,-62269,10663197,-1473946,-365331,-555017,-382313,-367988,-184818,-214665,-192798,-571178,-2088990,-305099,-178009,-49903,-72594,-184843,-2093234,-192780,-192758,-1155955,-72596,-2171347,-447325,-195290,-2108121,-536773,-192785,-365307,-571771,-192763,-535828,-114686,-58974,-1124039,-161033,-53296,-537257,-3630439,-195273,-50371,-195266,-571804,-184633,-2323309,-556706,-287666,-192786,-192787,-1558556,-192734,-53293,-2978650,-305138,-307573,-571805,-287668,-307866,-287077,-288247,-443174,-2185375,-49715,-295480,-305095,-90689,-60189,-171496,-5441968,-1964272,-536899,-550728,-550725,-1872673,-54624,-535880,-307584,-192775,-1741311,-536765,-192777,-536780,-14296,-218657,-1857436,-192799,-87565,-1983628,-307756,-1656678,-1311341,-536807,-192789,-287082,-52822,-51701,-184840,-449220,-214626,-195270,-2067731,-192774,-192782,-2186600,-2186665,-555717,-192757,-174737,-223026,-547479,-2177266,-192796,-60199,-307763,-62149,-148838,-287072,-196240,-2177246,-36989,-272644,-49915,-305092,-195271,-195272,22530087,-3406823,-1473938,-1803010,-2424260,-1613659,-13518111,-12823139,1329320704,1329320655,1329320665,1329320661,1329320671,1329320682,1329320679,1329320695,1329320650,1329320652,1329320699,1329320691,1329320688,1329320678,1329320701,1329320677,-6770751,-6759715,-6771266,-1377972,-3797325,-6771264,-12087673,-2717915,-2904396,108767350,-7268033,-13494993,-15016366,-17002860,-17002861,-3969434,-12092302,-192797,-9112011,-2559126,-13425948'
COUNTRIES_FILE = "data/countries.geojson"


def extract_iso_code(tags: str) -> str:
    x = json.loads(tags)

    code = pd.NA

    try:
        code = x["ISO3166-1:alpha3"]
    except KeyError:
        pass

    return code


def clean_osm_id(osm_id: int) -> int:
    return osm_id * -1


def main():
    gdf = gpd.read_file(COUNTRIES_FILE)
    gdf["osm_id"] = gdf.apply(lambda x: clean_osm_id(x.osm_id), axis=1)
    gdf["iso3166_1_alpha3"] = gdf.apply(lambda x: extract_iso_code(x.tags), axis=1)

    gdf = gdf.dropna(subset=["iso3166_1_alpha3"])

    gdf = gdf.drop(
        [
            "name",
            "boundary",
            "label_node_lat",
            "label_node_lng",
            "tags",
            "admin_level",
            "label_node_id",
            "admin_centre_node_id",
            "admin_centre_node_lat",
            "admin_centre_node_lng",
        ],
        axis=1,
    )

    gdf.to_file("test.geojson", driver="GeoJson")


if __name__ == "__main__":
    main()
